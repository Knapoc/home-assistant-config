#- platform: google_travel_time
#  name: google_travel_time_dev1_driving
#  api_key: !secret google_api
#  origin: !secret device1
#  destination: !secret zone1_fullname
#  options:
#    mode: driving

- platform: google_travel_time
  name: google_travel_time_dev1_transit
  api_key: !secret google_api
  origin: !secret device1
  destination: !secret zone1_fullname
  options:
    mode: transit

- platform: google_travel_time
  name: google_travel_time_dev1_dynamic_home
  api_key: !secret google_api
  origin: !secret device1
  destination: zone.home
  options:
    mode: transit

#- platform: google_travel_time
#  name: google_travel_time_dev2_driving
#  api_key: !secret google_api
#  origin: !secret device2
#  destination: !secret zone2_fullname
#  options:
#    mode: driving

#- platform: google_travel_time
#  name: google_travel_time_dev2_transit
#  api_key: !secret google_api
#  origin: !secret device2
#  destination: !secret zone2_fullname
#  options:
#    mode: transit

#- platform: google_travel_time
#  name: google_travel_time_dev2_dynamic_home
#  api_key: !secret google_api
#  origin: !secret device2
#  destination: zone.home
#  options:
#    mode: driving

- platform: uber
  server_token: !secret uber_st
  end_latitude: !secret uber_endlat
  end_longitude: !secret uber_endlong
  product_ids:
    - '0af354f1-e12e-4253-abae-3df48506c658'

- platform: time_date
  display_options:
    - 'time'
    - 'date'

- platform: mqtt
  name: sonoff_3028_version
  state_topic: "sonoff/stat/STATUS2"
  value_template: "{{ value_json['StatusFWR'].Version[:5] }}"

- platform: mqtt
  name: sonoff_office_temperature
  state_topic: "sonoff/tele/SENSOR"
  value_template: "{{ value_json['AM2301'].Temperature }}"
  unit_of_measurement: "°C"

- platform: mqtt
  name: sonoff_office_humidty
  state_topic: "sonoff/tele/SENSOR"
  value_template: "{{ value_json['AM2301'].Humidity }}"
  unit_of_measurement: "%"

- platform: mqtt
  name: wemosd1_room_temperature
  state_topic: "wemosd1_1/tele/SENSOR"
  value_template: "{{ value_json['SHT3X-0x45'].Temperature }}"
  unit_of_measurement: "°C"

- platform: mqtt
  name: wemosd1_room_humidty
  state_topic: "wemosd1_1/tele/SENSOR"
  value_template: "{{ value_json['SHT3X-0x45'].Humidity }}"
  unit_of_measurement: "%"

- platform: mqtt
  name: sonoff_uptime
  state_topic: "sonoff/tele/STATE"
  #value_template: "{{ value_json.Uptime }}"
  value_template: "{{ ((value_json.Uptime[:1] | int * 24) + (value_json.Uptime[2:4] | int) + (value_json.Uptime[5:7] | int / 60) + (value_json.Uptime[8:10] | int / 60 / 60))|round(2) }}"
  unit_of_measurement: "hours"

- platform: mqtt
  name: sonoff_rssi
  state_topic: "sonoff/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  unit_of_measurement: "dBm"

- platform: mqtt
  name: sonoff_vcc
  state_topic: "sonoff/tele/STATE"
  value_template: "{{ value_json.Vcc }}"
  unit_of_measurement: "V"

- platform: mqtt
  name: wemosd1_1_version
  state_topic: "wemosd1_1/stat/STATUS2"
  value_template: "{{ value_json['StatusFWR'].Version[:5] }}"

- platform: mqtt
  name: wemosd1_uptime
  state_topic: "wemosd1_1/tele/STATE"
  #value_template: "{{ value_json.Uptime }}"
  value_template: "{{ ((value_json.Uptime[:1] | int * 24) + (value_json.Uptime[2:4] | int) + (value_json.Uptime[5:7] | int / 60) + (value_json.Uptime[8:10] | int / 60 / 60))|round(2) }}"
  unit_of_measurement: "hours"

- platform: mqtt
  name: wemosd1_rssi
  state_topic: "wemosd1_1/tele/STATE"
  value_template: "{{ value_json['Wifi'].RSSI }}"
  unit_of_measurement: "dBm"

- platform: mqtt
  name: wemosd1_vcc
  state_topic: "wemosd1_1/tele/STATE"
  value_template: "{{ value_json.Vcc }}"
  unit_of_measurement: "V"

- platform: mqtt
  name: sonoff_maddox_version
  state_topic: "sonoff-version"

- platform: cert_expiry
  name: ssl_certificate_expiry
  host: !secret ssl_domain

- platform: systemmonitor
  resources:
    - type: disk_free
      arg: /
    - type: disk_use_percent
      arg: /
    - type: memory_free
    - type: memory_use_percent
    - type: processor_use
    - type: network_in
      arg: eth0
    - type: network_out
      arg: eth0
    - type: swap_use_percent
    - type: last_boot

- platform: command_line
  name: CPU Temperature
  command: cat /sys/class/thermal/thermal_zone1/temp
  unit_of_measurement: '°C'
  value_template: '{{ (value|int / 1000)|round(1) }}'

#- platform: speedtest
#  name: speedtest
#  monitored_conditions:
#    - ping
#    - download
#    - upload

- platform: cpuspeed

- platform: uptime
  name: Uptime
  unit_of_measurement: hours

- platform: version
  name: hass_version

- platform: sql
  db_url: !secret mysql_db
  queries:
    - name: database size hass
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="hassdb" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: MB
    - name: database size nc
      query: 'SELECT table_schema "database", Round(Sum(data_length + index_length) / 1024 / 1024, 1) "value" FROM information_schema.tables WHERE table_schema="nextcloud" GROUP BY table_schema;'
      column: 'value'
      unit_of_measurement: MB

- platform: fail2ban
  file_path: /fail2ban/fail2ban.log
  scan_interval: 180
  jails:
    - homeassistant
    - nextcloud
    - sshd

- platform: template
  sensors:
    wakeup_start_time_lights:
      friendly_name: 'Fade-in Startzeit'
      value_template: >
        {% if states.input_datetime.wakeup_alarm_time and states.input_number.wakeup_duration %}
        {% set alarmtime = states.input_datetime.wakeup_alarm_time.state %}
        {% set alarm_hour = alarmtime.split(":")[0] | int %}
        {% set alarm_min = alarmtime.split(":")[1] | int %}
        {% set light_dur = states.input_number.wakeup_duration.state | int %}
        {% set alarm_min_light = alarm_min - light_dur %}
        {% if alarm_min_light  < 0 %}
        {% set alarm_min_light = alarm_min_light + 60 %}
        {% set alarm_hour_light = alarm_hour - 1 %}
        {% if alarm_hour_light < 0 %}{% set alarm_hour_light = 23 %}{% endif %}
        {% if alarm_hour_light < 10 %}0{% endif %}{{ alarm_hour_light}}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% else %}
        {% if alarm_hour < 10 %}0{% endif %}{{ alarm_hour }}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% endif %}
        {% endif %}
