---
# cover automations

- alias: 'open covers in the morning'
  id: '1583686217'
  trigger:
    - platform: state
      entity_id: binary_sensor.bed_occupancy
      to: "off"
      for:
        minutes: "10"
  condition:
    condition: and
    conditions:
      - condition: time
        alias: "Time 05~10"
        after: "05:00:00"
        before: "11:00:00"
      - condition: or
        conditions:
          - condition: template
            value_template: "{{ (state_attr('cover.fyrtur_1', 'current_position')|int) < 100 }}"
          - condition: template
            value_template: "{{ (state_attr('cover.fyrtur_2', 'current_position')|int) < 100 }}"
          - condition: template
            value_template: "{{ (state_attr('cover.fyrtur_3', 'current_position')|int) < 100 }}"
          - condition: template
            value_template: "{{ (state_attr('cover.fyrtur_4', 'current_position')|int) < 100 }}"
  action:
    service: cover.open_cover
    data_template:
      entity_id: >
        {% set entities = 'cover.fyrtur_1',
                          'cover.fyrtur_2',
                          'cover.fyrtur_3',
                          'cover.fyrtur_4' %}
        {{ states | selectattr('entity_id','in', entities) | selectattr('attributes.current_position','<',100) | map(attribute='entity_id') | join(', ') }}
- alias: 'close covers at night'
  id: '1583686218'
  trigger:
    platform: template
    value_template: >-
      {{ states('sensor.time') == (state_attr('input_datetime.time_close_covers_night', 'timestamp')
        | int | timestamp_custom('%H:%M', False))
      }}
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: !secret person_1
        state: home
      - condition: or
        conditions:
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('cover.fyrtur_1', 'current_position')|int) > 0 }}"
              - condition: template
                value_template: "{{ is_state('binary_sensor.window_openclose_1', 'off') }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('cover.fyrtur_2', 'current_position')|int) > 0 }}"
              - condition: template
                value_template: "{{ is_state('binary_sensor.window_openclose_2', 'off') }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('cover.fyrtur_3', 'current_position')|int) > 0 }}"
              - condition: template
                value_template: "{{ is_state('binary_sensor.window_openclose_3', 'off') }}"
          - condition: and
            conditions:
              - condition: template
                value_template: "{{ (state_attr('cover.fyrtur_4', 'current_position')|int) > 0 }}"
              - condition: template
                value_template: "{{ is_state('binary_sensor.window_openclose_4', 'off') }}"
  action:
    service: cover.close_cover
    data_template:
      entity_id: >-
        {{ states.binary_sensor | selectattr("object_id", "search", "^window_openclose_[0-9]$")
          | selectattr('state','eq','off') | map(attribute='object_id') | join(',')
          | replace('window_openclose', 'cover.fyrtur')
        }}
- alias: 'stop cover if window is open'
  id: '1585950689'
  trigger:
    - platform: state
      entity_id: 'cover.fyrtur_1'
      to: 'closed'
    - platform: state
      entity_id: 'cover.fyrtur_2'
      to: 'closed'
    - platform: state
      entity_id: 'cover.fyrtur_3'
      to: 'closed'
    - platform: state
      entity_id: 'cover.fyrtur_4'
      to: 'closed'
  condition:
    - condition: template
      value_template: >-
        {{ is_state(trigger.object_id.replace('fyrtur', 'binary_sensor.window_openclose'), 'on') }}
  action:
    service: cover.stop_cover
    data_template:
      entity_id: '{{ trigger.entity_id }}'
- alias: 'close covers at night time when still open'
  id: '1629923876'
  trigger:
    - platform: state
      entity_id: 'binary_sensor.window_openclose_1'
      to: 'off'
    - platform: state
      entity_id: 'binary_sensor.window_openclose_2'
      to: 'off'
    - platform: state
      entity_id: 'binary_sensor.window_openclose_3'
      to: 'off'
    - platform: state
      entity_id: 'binary_sensor.window_openclose_4'
      to: 'off'
    - platform: state
      entity_id: !secret person_1
      to: home
  condition: >-
    {{ states('sensor.time') >= (state_attr('input_datetime.time_close_covers_night', 'timestamp')
      | int | timestamp_custom('%H:%M', False))
      or states('sensor.time') < states('sensor.wakeup_open_time_covers')
    }}
  action:
    - service: cover.close_cover
      data_template:
        entity_id: >-
          {%- if trigger.domain == 'binary_sensor' -%}
            cover.{{trigger.object_id.replace('window_openclose', 'fyrtur')}}
          {% else -%}
            {{ states.binary_sensor | selectattr("object_id", "search", "^window_openclose_[0-9]$")
              | selectattr('state','eq','off') | map(attribute='object_id') | join(',')
              | replace('window_openclose', 'cover.fyrtur')
            }}
          {% endif %}
