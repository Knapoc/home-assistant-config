homeassistant:
  customize_glob:
    "sensor.wakeup_*":
      homebridge_hidden: true
    "script.scene_*":
      homebridge_hidden: true
      icon: mdi:spotlight
  customize_domain:
    light:
      homebridge_hidden: true
  customize:
    light.zimmer:
      friendly_name: Zimmerlicht
      custom_ui_state_card: state-card-custom-light
    light.buro:
      friendly_name: BÃ¼rolicht
    light.wohnzimmer:
      friendly_name: Wohnzimmerlicht
    input_boolean.loop_livingcolors:
      friendly_name: Loop-Effekt
      icon: mdi:spotlight
    input_select.hue_scenes:
      friendly_name: hue Szene
      icon: mdi:spotlight

group:
  wakeuplight:
    name: Aufwachbeleuchtung
    control: hidden
    entities:
      - sensor.wakeup_alarm_time
      - sensor.wakeup_start_time_lights
      - sensor.wakeup_fadein_duration
      - input_number.wakeup_hour
      - input_number.wakeup_minutes
      - input_number.wakeup_duration
      - input_boolean.wakeup
      - input_boolean.wakeup_weekends
  bedroom_lights:
    name: Beleuchtung
    control: hidden
    entities:
      - light.zimmer
      - light.hue_color_spot_1
      - light.hue_color_spot_2
      - light.hue_color_spot_3
      - script.scene_bright
      - script.scene_nightlight
      - script.scene_tropical_twilight
      - input_select.hue_scenes
      - input_boolean.loop_livingcolors
  light_automations:
    name: Lichtautomatisierung
    control: hidden
    entities:
      - automation.hue_scene_activation
      - automation.random_light
      - automation.wakeup_light_bedroom

input_select:
  hue_scenes:
    name: hue scene
    initial: none
    options:
      - none
      - Savanna sunset
      - Tropical twilight
      - Arctic aurora
      - Spring blossom
      - Relax
      - Read
      - Concentrate
      - Energize
      - Bright
      - Dimmed
      - Nightlight
      - Mountain Dawn
      - KTBFFH
      - RLD

input_boolean:
  loop_livingcolors:
    name: Loop LivingColors
    initial: off
  wakeup:
    name: 'Aufwachbeleuchtung'
    icon: mdi:power
    initial: on
  wakeup_weekends:
    name: 'Wochenenden'
    icon: mdi:power
    initial: off

input_number:
  wakeup_hour:
    name: Stunde
    icon: mdi:clock-in
    initial: 6
    min: 0
    max: 23
    step: 1
  wakeup_minutes:
    name: Minuten
    icon: mdi:clock-in
    initial: 15
    min: 0
    max: 55
    step: 5
  wakeup_duration:
    name: Fade-in
    icon: mdi:clock-in
    initial: 10
    min: 5
    max: 60
    step: 5

sensor:
  - platform: template
    sensors:
      wakeup_alarm_time:
        friendly_name: 'Alarm'
        value_template: '{% if states.input_number.wakeup_hour.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_hour.state | int }}:{% if states.input_number.wakeup_minutes.state|length == 3 %}0{% endif %}{{ states.input_number.wakeup_minutes.state | int }}'
  - platform: template
    sensors:
      wakeup_start_time_lights:
        friendly_name: 'Fade-in Startzeit'
        value_template: >
          {% if states.sensor.wakeup_alarm_time and states.input_number.wakeup_duration %}
          {% set alarmtime = states.sensor.wakeup_alarm_time.state %}
          {% set alarm_hour = alarmtime.split(":")[0] | int %}
          {% set alarm_min = alarmtime.split(":")[1] | int %}
          {% set light_dur = states.input_number.wakeup_duration.state | int %}
          {% set alarm_min_light = alarm_min - light_dur %}
          {% if alarm_min_light  < 0 %}
          {% set alarm_min_light = alarm_min_light + 60 %}
          {% set alarm_hour_light = alarm_hour - 1 %}
          {% if alarm_hour_light < 0 %}{% set alarm_hour_light = 23 %}{% endif %}
          {% if alarm_hour_light < 10 %}0{% endif %}{{ alarm_hour_light}}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
          {% else %}
          {% if alarm_hour < 10 %}0{% endif %}{{ alarm_hour }}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
          {% endif %}
          {% endif %}
  - platform: template
    sensors:
      wakeup_fadein_duration:
        friendly_name: 'Fade-in Dauer'
        value_template: '{{ states.input_number.wakeup_duration.state | int }}'
        unit_of_measurement: 'min'

script:
  wakeup_zimmer:
    alias: 'Wakeup lighting, smooth transition'
    sequence:
      - service: light.turn_on
        data_template:
          entity_id: light.zimmer
          brightness: 1
          xy_color: [0.3698, 0.3723]
      - delay:
          seconds: 1
      - service: light.turn_on
        data_template:
          entity_id: light.zimmer
          brightness: 255
          transition: '{{ states.input_number.wakeup_duration.state | multiply(60) | int }}'
  scene_bright:
    alias: 'Bright'
    sequence:
      - alias: 'scene_bright'
        service: hue.hue_activate_scene
        data_template:
          group_name: "Zimmer"
          scene_name: "Bright"
  scene_tropical_twilight:
    alias: 'Tropical twilight'
    sequence:
      - alias: 'scene_tropical_twilight'
        service: hue.hue_activate_scene
        data_template:
          group_name: "Zimmer"
          scene_name: "Tropical twilight"
  scene_nightlight:
    alias: 'Nightlight'
    sequence:
      - alias: 'scene_nightlight'
        service: hue.hue_activate_scene
        data_template:
          group_name: "Zimmer"
          scene_name: "Nightlight"

automation:
  - alias: 'WakeUp Light Bedroom'
    id: '1500581870955'
    trigger:
      platform: template
      value_template: '{{ states.sensor.time.state == states.sensor.wakeup_start_time_lights.state }}'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: input_boolean.wakeup
          state: 'on'
        - condition: state
          entity_id: !secret device1
          state: 'home'
        - condition: or
          conditions:
            - condition: state
              entity_id: input_boolean.wakeup_weekends
              state: 'on'
            - condition: state
              entity_id: binary_sensor.workday_sensor
              state: 'on'
    action:
      service: script.wakeup_zimmer
  - alias: 'Hue Scene Activation'
    id: '1500589870955'
    trigger:
      platform: state
      entity_id: input_select.hue_scenes
    condition:
      condition: template
      value_template: '{{ states.input_select.hue_scenes.state != "none" }}'
    action:
      service: hue.hue_activate_scene
      data_template:
        group_name: "Zimmer"
        scene_name: '{{ trigger.to_state.state }}'
  - alias: 'Random light'
    id: '33223'
    trigger:
      platform: time
      minutes: '/2'
      seconds: 0
    condition:
      condition: state
      entity_id: input_boolean.loop_livingcolors
      state: 'on'
    action:
      service: light.turn_on
      entity_id: light.zimmer
      data:
        effect: random
        transition: 5
        brightness: 255
